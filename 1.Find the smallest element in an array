/*Find the smallest element in an array
Problem Statement: Given an array, we have to find the smallest element in the array.

Examples:

Example 1:
Input: arr[] = {2,5,1,3,0};
Output: 0
Explanation: 0 is the smallest element in the array. 

Example2: 
Input: arr[] = {8,10,5,7,9};
Output: 5
Explanation: 5 is the smallest element in the array.

Approach: 
Create a min variable and initialize it with arr[0].
Use a for loop and compare it with other elements of the array
If any element is less than the min value, update min value with elementâ€™s value
Print the min variable.
*/

//---------------c---------------------//
#include <stdio.h>
#include <stdlib.h>
int minimum(int a[],int n)
{
    int min=a[0];
    for(int i=1;i<n;i++)
    {
        if(a[i]<min)
        {
            min=a[i];
        }
    }
    return min;
}
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("minimum element=%d",minimum(a,n));
    return 0;
}
//---------cpp--------------//
#include <iostream>
#include <bits/stdc++.h>

using namespace std;
int minimumelement(int arr[],int n)
{
    int min=arr[0];
    for(int i=1;i<n;i++)
    {
        if(min>arr[i])
        {
            min=arr[i];
        }
    }
    return min;
}
int main()
{
    int n;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cout<<"minimumelement="<<minimumelement(a,n);
}

//-------------python----------------//
size=int(input())
arr=list(map(int,input().split(" ")))
print("minimum element",min(arr))
